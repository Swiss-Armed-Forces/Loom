{{- if .Values.fluentd.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "app.fullname" . }}-fluentd
  labels:
    {{- include "app.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
spec:
  selector:
    matchLabels:
      app: {{ include "app.name" . }}-fluentd
  template:
    metadata:
      labels:
        app: {{ include "app.name" . }}-fluentd
    spec:
      serviceAccountName: {{ include "app.fullname" . }}-fluentd
      initContainers:
        - name: check-elasticsearch-ready
          image: {{ .Values.image.registry }}/{{ .Values.fluentd.initContainer.image.repository }}:{{ default (default .Chart.AppVersion .Values.image.tag) .Values.fluentd.initContainer.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - 'sh'
            - '-c'
            - |
              set -eu

              until nc -vz {{ include "app.fullname" . }}-elasticsearch {{ .Values.elasticsearch.service.port }}; do
                echo "Waiting for elasticsearch service";
                sleep 1;
              done;
          {{- if .Values.fluentd.initContainer.resources }}
          resources: {{- toYaml .Values.fluentd.initContainer.resources | nindent 12 }}
          {{- end }}
      containers:
        - name: fluentd
          image: {{ .Values.image.registry }}/{{ .Values.fluentd.image.repository }}:{{ default (default .Chart.AppVersion .Values.image.tag) .Values.fluentd.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.fluentd.resources }}
          resources: {{- toYaml .Values.fluentd.resources | nindent 12 }}
          {{- end }}
          securityContext:
            runAsUser: 0
          env:
            - name: FLUENT_ELASTICSEARCH_HOST
              value: {{ include "app.fullname" . }}-elasticsearch
            - name: FLUENT_ELASTICSEARCH_PORT
              value: {{ .Values.elasticsearch.service.port | quote }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varlibdocker
              mountPath: /var/lib/docker/
              readOnly: true
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdocker
          hostPath:
            path: /var/lib/docker/
{{- end }}