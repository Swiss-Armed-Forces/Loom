{{- $memoryLimitBytes := include "SI-to-bytes" .Values.rabbit.resources.limits.memory | int64 -}}
{{- $memoryLimitHighWatermarkThresholdPercent := 0.8 -}}
{{- $memoryLimitHighWatermarkBytes := mulf $memoryLimitBytes $memoryLimitHighWatermarkThresholdPercent | int64 -}}

{{- $taskTimeLimitMilliseconds := mulf .Values.pipeline.taskTimeLimitSeconds 1000 | int64 -}}
{{- $taskTimeLimitAddMilliseconds := 300000 -}}
{{- $consumerTimeoutMilliseconds := add $taskTimeLimitMilliseconds $taskTimeLimitAddMilliseconds | int64 -}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "app.fullname" . }}-rabbit-config
  labels:
    {{- include "app.labels.standard" . | nindent 4 }}
data:
  rabbitmq.conf: |
    vm_memory_high_watermark.absolute = {{ printf "%d" $memoryLimitHighWatermarkBytes }}

    # according to recommendations in:
    # https://www.rabbitmq.com/docs/prometheus#prometheus-configuration
    collect_statistics_interval = 10000

    # we allow the maximum possible message size for now
    # https://www.rabbitmq.com/docs/configure
    # this is a workaround until we have fixed the following issue:
    # https://gitlab.com/swiss-armed-forces/cyber-command/cea/loom/-/issues/115
    max_message_size = 536870912

    # Maximum time (in milliseconds) a consumer has to acknowledge a message delivery.
    # If exceeded, the channel is closed with PRECONDITION_FAILED and all deliveries are requeued.
    # Evaluated at 1-minute intervals. Increase if consumers need more processing time.
    # https://www.rabbitmq.com/docs/consumers#how-it-works
    consumer_timeout = {{ printf "%d" $consumerTimeoutMilliseconds }}