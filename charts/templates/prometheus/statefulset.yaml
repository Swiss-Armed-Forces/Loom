{{- if .Values.prometheus.enabled }}
{{- $pvcStorageBytes := include "SI-to-bytes" .Values.prometheus.pvc.storage | int64 -}}
{{- $pvcStorageHighWatermarkThresholdPercent := 0.5 -}}
{{- $pvcStorageHighWatermarkBytes := mulf $pvcStorageBytes $pvcStorageHighWatermarkThresholdPercent | int64 -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app.fullname" . }}-prometheus
  labels:
    {{- include "app.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
spec:
  replicas: {{ .Values.prometheus.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "app.name" . }}-prometheus
  template:
    metadata:
      labels:
        app: {{ include "app.name" . }}-prometheus
    spec:
      serviceAccountName: {{ include "app.fullname" . }}-prometheus
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      initContainers:
        - name: clear-tsdb-lock
          image: {{ .Values.image.registry }}/{{ .Values.prometheus.initContainer.image.repository }}:{{ default (default .Chart.AppVersion .Values.image.tag) .Values.prometheus.initContainer.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - 'sh'
            - '-c'
            - |
              set -eux

              rm -f /prometheus/lock
          volumeMounts:
            - name: prometheus
              mountPath: /prometheus
          {{- if .Values.prometheus.initContainer.resources }}
          resources: {{- toYaml .Values.prometheus.initContainer.resources | nindent 12 }}
          {{- end }}
      containers:
        - name: prometheus
          image: {{ .Values.image.registry }}/{{ .Values.prometheus.image.repository }}:{{ default (default .Chart.AppVersion .Values.image.tag) .Values.prometheus.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --web.enable-admin-api
            # Go LIMITS
            - --enable-feature=auto-gomemlimit
            - --enable-feature=auto-gomaxprocs
            # first two are default from the image, https://github.com/prometheus/prometheus/blob/main/Dockerfile
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            # setting max retention to % of the pvc
            - --storage.tsdb.retention.size={{ printf "%d" $pvcStorageHighWatermarkBytes }}B
          ports:
            - name: metrics
              containerPort: {{ .Values.prometheus.service.port }}
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              readOnly: true
              subPath: prometheus.yml
            - name: prometheus
              mountPath: /prometheus
          {{- if .Values.prometheus.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /-/healthy
              port: metrics
              scheme: HTTP
            initialDelaySeconds: {{ default 0 .Values.prometheus.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 10 .Values.prometheus.readinessProbe.periodSeconds }}
            failureThreshold: {{ default 3 .Values.prometheus.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.prometheus.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: metrics
              scheme: HTTP
            initialDelaySeconds: {{ default 0 .Values.prometheus.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 10 .Values.prometheus.livenessProbe.periodSeconds }}
            failureThreshold: {{ default 6 .Values.prometheus.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.prometheus.resources }}
          resources: {{- toYaml .Values.prometheus.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ include "app.fullname" . }}-prometheus-config
  volumeClaimTemplates:
    - metadata:
        name: prometheus
      spec:
        accessModes:
          - {{ .Values.prometheus.pvc.accessModes | default "ReadWriteOnce" | quote }}
        resources:
            requests:
              storage: {{ .Values.prometheus.pvc.storage }}
{{- end }}
