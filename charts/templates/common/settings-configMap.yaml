apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "app.fullname" . }}-settings
  labels:
    {{- include "app.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
data:
    # NOTE: Using Helm conditionals to prevent keys with null/empty values from being included
    # in the ConfigMap. This is a workaround for an ArgoCD bug where null values in YAML
    # get converted to empty strings, causing the application to remain perpetually OutOfSync.
    #
    # Bug details: https://github.com/argoproj/argo-cd/issues/15566
    # - ArgoCD converts null values to empty strings during processing
    # - This causes a diff between desired state (null) and live state (key removed)
    # - The conditional approach ensures keys are only included when they have actual values
    #
    # Without conditionals:
    #   foo: null     -> becomes foo: ""     -> causes OutOfSync
    # With conditionals:
    #   {{- if .Values.foo }}foo: {{ .Values.foo }}{{- end }}  -> key omitted entirely

    ENVIRONMENT: {{ .Values.environment }}
    DOMAIN: {{ .Values.domain }}

    # pipeline
    {{- if .Values.pipeline.skip_summarize_while_indexing }}
    skip_summarize_while_indexing: {{ .Values.pipeline.skip_summarize_while_indexing | quote }}
    {{- end }}
    {{- if .Values.pipeline.skip_translate_while_indexing }}
    skip_translate_while_indexing: {{ .Values.pipeline.skip_translate_while_indexing | quote }}
    {{- end }}
    {{- if .Values.pipeline.tika_ocr_languages }}
    tika_ocr_languages: {{ .Values.pipeline.tika_ocr_languages | join "," | quote }}
    {{- end }}

    # llm
    {{- if .Values.llm.model }}
    llm_model: {{ .Values.llm.model }}
    {{- end }}
    {{- if .Values.llm.model_embedding }}
    llm_model_embedding: {{ .Values.llm.model_embedding }}
    {{- end }}
    llm_think: {{ .Values.llm.think | quote }}
    {{- if .Values.llm.temperature }}
    llm_temperature: {{ .Values.llm.temperature | quote }}
    {{- end }}
    {{- if .Values.llm.summarize_text_chunk_size }}
    llm_summarize_text_chunk_size: {{ .Values.llm.summarize_text_chunk_size | quote  }}
    {{- end }}
    {{- if .Values.llm.summarize_text_chunk_overlap }}
    llm_summarize_text_chunk_overlap: {{ .Values.llm.summarize_text_chunk_overlap | quote  }}
    {{- end }}
    {{- if .Values.llm.embedding_temperature }}
    llm_embedding_temperature: {{ .Values.llm.embedding_temperature | quote  }}
    {{- end }}
    {{- if .Values.llm.embedding_text_chunk_size }}
    llm_embedding_text_chunk_size: {{ .Values.llm.embedding_text_chunk_size | quote  }}
    {{- end }}
    {{- if .Values.llm.embedding_text_chunk_overlap }}
    llm_embedding_text_chunk_overlap: {{ .Values.llm.embedding_text_chunk_overlap | quote  }}
    {{- end }}
    {{- if .Values.llm.rerank_temperature }}
    llm_rerank_temperature: {{ .Values.llm.rerank_temperature | quote  }}
    {{- end }}

    # hosts
    mongo_db_host: mongodb://{{ include "app.fullname" . }}-mongodb:{{ .Values.mongodb.service.port }}
    es_host: http://{{ include "app.fullname" . }}-elasticsearch:{{ .Values.elasticsearch.service.port }}
    rabbit_mq_management_host: http://guest:guest@{{ include "app.fullname" . }}-rabbit:{{ .Values.rabbit.service.port.http }}
    celery_broker_host: amqp://{{ include "app.fullname" . }}-rabbit:{{ .Values.rabbit.service.port.amqp }}
    celery_backend_host: redis://{{ include "app.fullname" . }}-redis:{{ .Values.redis.service.port }}/0?protocol=3
    tika_server_host: http://{{ include "app.fullname" . }}-tika:{{ .Values.tika.service.port }}
    rspam_host: http://{{ include "app.fullname" . }}-rspamd:{{ .Values.rspamd.worker.service.port }}
    translate_host: http://{{ include "app.fullname" . }}-translate:{{ .Values.translate.service.port }}
    ollama_host: http://{{ include "app.fullname" . }}-ollama:{{ .Values.ollama.service.port }}
    api_host: http://{{ include "app.fullname" . }}-api:{{ .Values.api.service.port }}
    ws_host: ws://{{ include "app.fullname" . }}-api:{{ .Values.api.service.port }}
    imap_host: imap://{{ include "app.fullname" . }}-dovecot:{{ .Values.dovecot.service.port.imap }}
    minio_host: {{ include "app.fullname" . }}-minio:{{ .Values.minio.service.port }}

    # flower
    FLOWER_BROKER_API: http://guest:guest@{{ include "app.fullname" . }}-rabbit:{{ .Values.rabbit.service.port.http }}/api/
    FLOWER_ENABLE_EVENTS: "false" # by default enabled on all workers anyways