environment: production
nameOverride: null

domain: &default-domain loom

kubernets:
  api: 192.168.49.2

image:
  registry: registry.gitlab.com
  pullPolicy: IfNotPresent

certificate:
  enabled: false
  issuerRef:
    name: null
  requireClientCert: false

ingress: &default-ingress-config
  enabled: true
  className: traefik
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
  tls:
    enabled: true

egress:
  enabled: false

pipeline:
  skip_summarize_while_indexing: false
  skip_translate_while_indexing: false
  tika_ocr_languages:
    - eng
    - deu
    - fra

llm:
  model: deepseek-r1:8b
  model_embedding: nomic-embed-text:v1.5
  temperature: null
  summarize_text_chunk_size: null
  summarize_text_chunk_overlap: null
  embedding_temperatur: null
  embedding_text_chunk_size: null
  embedding_text_chunk_overlap: null
  llm_rerank_temperature: null

preInstall:
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/alpine
  resources:
    requests:
      cpu: "0.1"
      memory: "100Mi"
    limits:
      cpu: "0.2"
      memory: "200Mi"
  generateSecrets:
    - name: loom-minio-secret
      size: 40
      chars: "A-Za-z0-9"
      fixed: "0000000000000000000000000000000000000000"
    - name: archive-encryption-master-key
      size: 32
      chars: "a-f0-9"
      fixed: "00000000000000000000000000000000"

globalHttpRedirect:
  enabled: true
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/alpine
  service:
    port: 80
  resources:
    requests:
      cpu: "0.05"
      memory: "50Mi"
    limits:
      cpu: "0.1"
      memory: "100Mi"

api:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/api
  service:
    port: 8084
  ingress: *default-ingress-config
  readinessProbe:
    enabled: true
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.2"
      memory: "200Mi"
    limits:
      cpu: "2"
      memory: "4Gi"
  initContainer:
    image:
      repository: swiss-armed-forces/cyber-command/cea/loom/alpine
    resources:
      requests:
        cpu: "0.05"
        memory: "50Mi"
      limits:
        cpu: "0.1"
        memory: "100Mi"

frontend:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/frontend
  service:
    port: 80
  ingress: *default-ingress-config
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.1"
      memory: "100Mi"
    limits:
      cpu: "0.3"
      memory: "500Mi"

celery:
  flower:
    replicaCount: 1
    image:
      repository: swiss-armed-forces/cyber-command/cea/loom/celery-flower
    service:
      port: 5555
    volume:
      sizeLimit: "500Mi"
    ingress: *default-ingress-config
    readinessProbe:
      enabled: false
    livenessProbe:
      enabled: true
    resources:
      requests:
        cpu: "0.2"
        memory: "200Mi"
      limits:
        cpu: "1"
        memory: "1Gi"
    initContainer:
      image:
        repository: swiss-armed-forces/cyber-command/cea/loom/alpine
      resources:
        requests:
          cpu: "0.05"
          memory: "50Mi"
        limits:
          cpu: "0.1"
          memory: "100Mi"
  worker:
    main:
      replicaCount: 1
      hpa: &default-celery-worker-hpa
        enabled: true
        maxReplicas: 100
        minReplicas: 1
        targetCPUUtilizationPercentage: 100
        targetMemoryUtilizationPercentage: 100
      image:
        repository: swiss-armed-forces/cyber-command/cea/loom/celery-worker
      service: &default-celery-worker-service
        port: 80
      readinessProbe:
        enabled: true
      livenessProbe:
        enabled: true
      resources: &default-celery-worker-resouces
        requests:
          cpu: "0.3"
          memory: "500Mi"
        limits:
          cpu: "1.5"
          memory: "4Gi"
    interactive:
      replicaCount: 1
      hpa: *default-celery-worker-hpa
      image:
        repository: swiss-armed-forces/cyber-command/cea/loom/celery-worker-interactive
      service: *default-celery-worker-service
      readinessProbe:
        enabled: false
      livenessProbe:
        enabled: true
      resources: *default-celery-worker-resouces
    periodic:
      replicaCount: 1
      image:
        repository: swiss-armed-forces/cyber-command/cea/loom/celery-worker-periodic
      service: *default-celery-worker-service
      readinessProbe:
        enabled: false
      livenessProbe:
        enabled: true
      resources: *default-celery-worker-resouces
    beat:
      replicaCount: 1
      image:
        repository: swiss-armed-forces/cyber-command/cea/loom/celery-worker-beat
      service: *default-celery-worker-service
      readinessProbe:
        enabled: false
      livenessProbe:
        enabled: true
      resources:
        requests:
          cpu: "0.1"
          memory: "200Mi"
        limits:
          cpu: "0.2"
          memory: "500Mi"

crawler:
  enabled: true
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/crawler
  service:
    port: 80
  resources:
    requests:
      cpu: "0.2"
      memory: "200Mi"
    limits:
      cpu: "0.4"
      memory: "1Gi"
  initContainer:
    image:
      repository: swiss-armed-forces/cyber-command/cea/loom/alpine
    resources:
      requests:
        cpu: "0.05"
        memory: "50Mi"
      limits:
        cpu: "0.1"
        memory: "100Mi"

elasticsearch:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/elasticsearch
  service:
    port: 9200
  pvc:
    storage: 50Gi
  ingress: *default-ingress-config
  readinessProbe:
    enabled: true
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.5"
      memory: "4Gi"
    limits:
      cpu: "8"
      memory: "16Gi"

elasticvue:
  enabled: true
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/elasticvue
  service:
    port: 8080
  ingress: *default-ingress-config
  resources:
    requests:
      cpu: "0.05"
      memory: "100Mi"
    limits:
      cpu: "0.5"
      memory: "500Mi"

fluentd:
  enabled: true
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/fluentd
  service:
    port: 24224
  resources:
    requests:
      cpu: "0.1"
      memory: "100Mi"
    limits:
      cpu: "0.5"
      memory: "500Mi"

grafana:
  enabled: true
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/grafana
  service:
    port: 3000
  ingress: *default-ingress-config
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.2"
      memory: "200Mi"
    limits:
      cpu: "2"
      memory: "2Gi"

translate:
  replicaCount: 1
  hpa:
    enabled: true
    maxReplicas: 2
    minReplicas: 1
    targetCPUUtilizationPercentage: 100
    targetMemoryUtilizationPercentage: 100
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/libretranslate
  service:
    port: 5000
  ingress: *default-ingress-config
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.5"
      memory: "2Gi"
    limits:
      cpu: "2"
      memory: "10Gi"

minio:
  domain: *default-domain
  replicas: 1
  mode: standalone
  nameOverride: loom-minio
  image:
    repository: registry.gitlab.com/swiss-armed-forces/cyber-command/cea/loom/minio
    pullPolicy: IfNotPresent
  mcImage:
    repository: registry.gitlab.com/swiss-armed-forces/cyber-command/cea/loom/mc
    pullPolicy: IfNotPresent
  service:
    port: 9000
  consoleService:
    port: 9001
  persistence:
    size: 20Gi
  resources:
    requests:
      cpu: "0.1"
      memory: "500Mi"
    limits:
      cpu: "1"
      memory: "2000Mi"
  certificate:
    requireClientCert: false
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    tls:
      - hosts:
          - minio-api
    hosts:
      - minio-api
  consoleIngress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    tls:
      - hosts:
          - minio
    hosts:
      - minio
  rootUser: minioadmin
  rootPassword: minioadmin
  svcaccts:
    - accessKey: MinIO-Intake-Key
      existingSecret: loom-minio-secret
      existingSecretKey: secretkey
      user: minioadmin
  buckets:
    - name: default
      policy: public
      purge: false
      versioning: false
      objectlocking: false
  customCommandJob:
    resources: &default-minio-job-resouces
      requests:
        cpu: "0.01"
        memory: "50Mi"
      limits:
        cpu: "0.1"
        memory: "100Mi"
  makeBucketJob:
    resources: *default-minio-job-resouces
  makePolicyJob:
    resources: *default-minio-job-resouces
  makeServiceAccountJob:
    resources: *default-minio-job-resouces
  makeUserJob:
    resources: *default-minio-job-resouces

mongodb:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/mongodb
  service:
    port: 27017
  ingress:
    enabled: false
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  pvc:
    storage: 50Gi
  resources:
    requests:
      cpu: "0.2"
      memory: "1Gi"
    limits:
      cpu: "2"
      memory: "3Gi"
  express:
    enabled: true
    replicaCount: 1
    image:
      repository: swiss-armed-forces/cyber-command/cea/loom/mongo-express
    service:
      port: 8081
    ingress: *default-ingress-config
    resources:
      requests:
        cpu: "0.3"
        memory: "300Mi"
      limits:
        cpu: "0.5"
        memory: "500Mi"

rabbit:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/rabbit
  service:
    port:
      amqp: 5672
      http: 15672
      prometheus: 15692
  pvc:
    storage: 30Gi
  ingress:
    http: *default-ingress-config
    amqp:
      enabled: false
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.4"
      memory: "1Gi"
    limits:
      cpu: "2"
      memory: "3Gi"

ollama:
  replicaCount: 1
  hpa:
    enabled: true
    maxReplicas: 2
    minReplicas: 1
    targetCPUUtilizationPercentage: 100
    targetMemoryUtilizationPercentage: 100
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/ollama
  service:
    port: 11434
  ingress: *default-ingress-config
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.6"
      memory: "2Gi"
    limits:
      cpu: "10"
      memory: "10Gi"

open_webui:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/open-webui
  env:
    WEBUI_AUTH: "false"
    ENABLE_SIGNUP: "false"
  service:
    port: 8080
  ingress: *default-ingress-config
  resources:
    requests:
      cpu: "0.1"
      memory: "200Mi"
    limits:
      cpu: "1.5"
      memory: "1500Mi"

dovecot:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/dovecot
  service:
    port:
      imap: 143
  pvc:
    storage: 10Gi
  ingress:
    imaps: *default-ingress-config
    imap:
      enabled: false
      className: traefik
  resources:
    requests:
      cpu: "0.1"
      memory: "100Mi"
    limits:
      cpu: "0.5"
      memory: "500Mi"
  initContainer:
    image:
      repository: swiss-armed-forces/cyber-command/cea/loom/alpine
    resources:
      requests:
        cpu: "0.05"
        memory: "50Mi"
      limits:
        cpu: "0.1"
        memory: "100Mi"

roundcube:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/roundcube
  service:
    port: 80
  ingress: *default-ingress-config
  resources:
    requests:
      cpu: "0.1"
      memory: "100Mi"
    limits:
      cpu: "0.5"
      memory: "500Mi"

prometheus:
  enabled: true
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/prometheus
  service:
    port: 9090
  pvc:
    storage: 10Gi
  ingress: *default-ingress-config
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.1"
      memory: "200Mi"
    limits:
      cpu: "1"
      memory: "500Mi"
  collectClusterMetrics: true
  initContainer:
    image:
      repository: swiss-armed-forces/cyber-command/cea/loom/alpine
    resources:
      requests:
        cpu: "0.05"
        memory: "50Mi"
      limits:
        cpu: "0.1"
        memory: "100Mi"

redis:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/redis
  service:
    port: 6379
  ingress:
    enabled: false
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.2"
      memory: "500Mi"
    limits:
      cpu: "1.5"
      memory: "1500Mi"
  insight:
    enabled: true
    replicaCount: 1
    image:
      repository: swiss-armed-forces/cyber-command/cea/loom/redisinsight
    service:
      port: 5540
    ingress: *default-ingress-config
    resources:
      requests:
        cpu: "0.1"
        memory: "100Mi"
      limits:
        cpu: "0.3"
        memory: "300Mi"

rspamd:
  replicaCount: 1
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/rspamd
  worker:
    ingress: *default-ingress-config
    service:
      port: 11333
  resources:
    requests:
      cpu: "0.2"
      memory: "200Mi"
    limits:
      cpu: "1"
      memory: "1Gi"
  controller:
    ingress: *default-ingress-config
    service:
      port: 11334

tika:
  replicaCount: 1
  hpa:
    enabled: true
    maxReplicas: 10
    minReplicas: 1
    targetCPUUtilizationPercentage: 100
    targetMemoryUtilizationPercentage: 100
  image:
    repository: swiss-armed-forces/cyber-command/cea/loom/tika
  service:
    port: 9998
  ingress: *default-ingress-config
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: true
  resources:
    requests:
      cpu: "0.5"
      memory: "4Gi"
    limits:
      cpu: "4"
      memory: "6Gi"
