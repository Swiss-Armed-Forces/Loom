/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Loom API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface GetFilePreviewResponse
 */
export interface GetFilePreviewResponse {
    /**
     *
     * @type {string}
     * @memberof GetFilePreviewResponse
     */
    fileId: string;
    /**
     *
     * @type {Array<string>}
     * @memberof GetFilePreviewResponse
     */
    tags?: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof GetFilePreviewResponse
     */
    hidden: boolean;
    /**
     *
     * @type {string}
     * @memberof GetFilePreviewResponse
     */
    content: string;
    /**
     *
     * @type {boolean}
     * @memberof GetFilePreviewResponse
     */
    contentPreviewIsTruncated: boolean;
    /**
     *
     * @type {boolean}
     * @memberof GetFilePreviewResponse
     */
    contentIsTruncated: boolean;
    /**
     *
     * @type {string}
     * @memberof GetFilePreviewResponse
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof GetFilePreviewResponse
     */
    path: string;
    /**
     *
     * @type {boolean}
     * @memberof GetFilePreviewResponse
     */
    hasThumbnail: boolean;
    /**
     *
     * @type {boolean}
     * @memberof GetFilePreviewResponse
     */
    hasAttachments: boolean;
    /**
     *
     * @type {string}
     * @memberof GetFilePreviewResponse
     */
    fileExtension: string;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof GetFilePreviewResponse
     */
    highlight?: { [key: string]: any };
    /**
     *
     * @type {Array<string>}
     * @memberof GetFilePreviewResponse
     */
    tasksSucceeded?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof GetFilePreviewResponse
     */
    tasksRetried?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof GetFilePreviewResponse
     */
    tasksFailed?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof GetFilePreviewResponse
     */
    summary?: string;
}

/**
 * Check if a given object implements the GetFilePreviewResponse interface.
 */
export function instanceOfGetFilePreviewResponse(value: object): boolean {
    if (!("fileId" in value)) return false;
    if (!("hidden" in value)) return false;
    if (!("content" in value)) return false;
    if (!("contentPreviewIsTruncated" in value)) return false;
    if (!("contentIsTruncated" in value)) return false;
    if (!("name" in value)) return false;
    if (!("path" in value)) return false;
    if (!("hasThumbnail" in value)) return false;
    if (!("hasAttachments" in value)) return false;
    if (!("fileExtension" in value)) return false;
    return true;
}

export function GetFilePreviewResponseFromJSON(
    json: any,
): GetFilePreviewResponse {
    return GetFilePreviewResponseFromJSONTyped(json, false);
}

export function GetFilePreviewResponseFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): GetFilePreviewResponse {
    if (json == null) {
        return json;
    }
    return {
        fileId: json["file_id"],
        tags: json["tags"] == null ? undefined : json["tags"],
        hidden: json["hidden"],
        content: json["content"],
        contentPreviewIsTruncated: json["content_preview_is_truncated"],
        contentIsTruncated: json["content_is_truncated"],
        name: json["name"],
        path: json["path"],
        hasThumbnail: json["has_thumbnail"],
        hasAttachments: json["has_attachments"],
        fileExtension: json["file_extension"],
        highlight: json["highlight"] == null ? undefined : json["highlight"],
        tasksSucceeded:
            json["tasks_succeeded"] == null
                ? undefined
                : json["tasks_succeeded"],
        tasksRetried:
            json["tasks_retried"] == null ? undefined : json["tasks_retried"],
        tasksFailed:
            json["tasks_failed"] == null ? undefined : json["tasks_failed"],
        summary: json["summary"] == null ? undefined : json["summary"],
    };
}

export function GetFilePreviewResponseToJSON(
    value?: GetFilePreviewResponse | null,
): any {
    if (value == null) {
        return value;
    }
    return {
        file_id: value["fileId"],
        tags: value["tags"],
        hidden: value["hidden"],
        content: value["content"],
        content_preview_is_truncated: value["contentPreviewIsTruncated"],
        content_is_truncated: value["contentIsTruncated"],
        name: value["name"],
        path: value["path"],
        has_thumbnail: value["hasThumbnail"],
        has_attachments: value["hasAttachments"],
        file_extension: value["fileExtension"],
        highlight: value["highlight"],
        tasks_succeeded: value["tasksSucceeded"],
        tasks_retried: value["tasksRetried"],
        tasks_failed: value["tasksFailed"],
        summary: value["summary"],
    };
}
