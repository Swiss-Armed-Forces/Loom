/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Loom API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ArchiveContent } from "./ArchiveContent";
import {
    ArchiveContentFromJSON,
    ArchiveContentFromJSONTyped,
    ArchiveContentToJSON,
} from "./ArchiveContent";
import type { ArchiveMeta } from "./ArchiveMeta";
import {
    ArchiveMetaFromJSON,
    ArchiveMetaFromJSONTyped,
    ArchiveMetaToJSON,
} from "./ArchiveMeta";

/**
 *
 * @export
 * @interface ArchiveHit
 */
export interface ArchiveHit {
    /**
     *
     * @type {ArchiveMeta}
     * @memberof ArchiveHit
     */
    meta: ArchiveMeta;
    /**
     *
     * @type {ArchiveContent}
     * @memberof ArchiveHit
     */
    content: ArchiveContent;
    /**
     *
     * @type {string}
     * @memberof ArchiveHit
     */
    sha256?: string;
    /**
     *
     * @type {string}
     * @memberof ArchiveHit
     */
    sha256Encrypted?: string;
    /**
     *
     * @type {boolean}
     * @memberof ArchiveHit
     */
    hidden: boolean;
    /**
     *
     * @type {string}
     * @memberof ArchiveHit
     */
    fileId: string;
}

/**
 * Check if a given object implements the ArchiveHit interface.
 */
export function instanceOfArchiveHit(value: object): boolean {
    if (!("meta" in value)) return false;
    if (!("content" in value)) return false;
    if (!("hidden" in value)) return false;
    if (!("fileId" in value)) return false;
    return true;
}

export function ArchiveHitFromJSON(json: any): ArchiveHit {
    return ArchiveHitFromJSONTyped(json, false);
}

export function ArchiveHitFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): ArchiveHit {
    if (json == null) {
        return json;
    }
    return {
        meta: ArchiveMetaFromJSON(json["meta"]),
        content: ArchiveContentFromJSON(json["content"]),
        sha256: json["sha256"] == null ? undefined : json["sha256"],
        sha256Encrypted:
            json["sha256_encrypted"] == null
                ? undefined
                : json["sha256_encrypted"],
        hidden: json["hidden"],
        fileId: json["file_id"],
    };
}

export function ArchiveHitToJSON(value?: ArchiveHit | null): any {
    if (value == null) {
        return value;
    }
    return {
        meta: ArchiveMetaToJSON(value["meta"]),
        content: ArchiveContentToJSON(value["content"]),
        sha256: value["sha256"],
        sha256_encrypted: value["sha256Encrypted"],
        hidden: value["hidden"],
        file_id: value["fileId"],
    };
}
